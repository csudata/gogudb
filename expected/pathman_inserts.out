\set VERBOSITY terse
SET search_path = 'public','_gogu';
CREATE EXTENSION gogudb;
CREATE SCHEMA test_inserts;
/* create a partitioned table */
CREATE TABLE test_inserts.storage(a INT4, b INT4 NOT NULL, c NUMERIC, d TEXT);
INSERT INTO test_inserts.storage SELECT i * 2, i, i, i::text FROM generate_series(1, 100) i;
CREATE UNIQUE INDEX ON test_inserts.storage(a);
SELECT create_range_partitions('test_inserts.storage', 'b', 1, 10);
 create_range_partitions 
-------------------------
                      10
(1 row)

/* attach before and after insertion triggers to partitioned table */
CREATE OR REPLACE FUNCTION test_inserts.print_cols_before_change() RETURNS TRIGGER AS $$
BEGIN
	RAISE NOTICE 'BEFORE INSERTION TRIGGER ON TABLE % HAS EXPIRED. INSERTED ROW: %', tg_table_name, new;
	RETURN new;
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION test_inserts.print_cols_after_change() RETURNS TRIGGER AS $$
BEGIN
	RAISE NOTICE 'AFTER INSERTION TRIGGER ON TABLE % HAS EXPIRED. INSERTED ROW: %', tg_table_name, new;
	RETURN new;
END;
$$ LANGUAGE plpgsql;
/* set triggers on existing first partition and new generated partitions */
CREATE TRIGGER print_new_row_before_insert BEFORE INSERT ON gogudb_partition_table._test_inserts_1_storage
	FOR EACH ROW EXECUTE PROCEDURE test_inserts.print_cols_before_change();
CREATE TRIGGER print_new_row_after_insert AFTER INSERT ON gogudb_partition_table._test_inserts_1_storage
	FOR EACH ROW EXECUTE PROCEDURE test_inserts.print_cols_after_change();
/* set partition init callback that will add triggers to partitions */
CREATE OR REPLACE FUNCTION test_inserts.set_triggers(args jsonb) RETURNS VOID AS $$
BEGIN
	EXECUTE format('create trigger print_new_row_before_insert before insert on %s.%s
						for each row execute procedure test_inserts.print_cols_before_change();',
				   args->>'partition_schema', args->>'partition');
	EXECUTE format('create trigger print_new_row_after_insert after insert on %s.%s
						for each row execute procedure test_inserts.print_cols_after_change();',
				   args->>'partition_schema', args->>'partition');
END;
$$ LANGUAGE plpgsql;
SELECT set_init_callback('test_inserts.storage', 'test_inserts.set_triggers(jsonb)');
 set_init_callback 
-------------------
 
(1 row)

/* we don't support ON CONLICT */
INSERT INTO test_inserts.storage VALUES(0, 0, 0, 'UNSUPPORTED_1')
ON CONFLICT (a) DO UPDATE SET a = 3;
ERROR:  ON CONFLICT clause is not supported with partitioned tables
INSERT INTO test_inserts.storage VALUES(0, 0, 0, 'UNSUPPORTED_2')
ON CONFLICT (a) DO NOTHING;
ERROR:  ON CONFLICT clause is not supported with partitioned tables
/* implicitly prepend a partition (no columns have been dropped yet) */
INSERT INTO test_inserts.storage VALUES(0, 0, 0, 'PREPEND.') RETURNING *;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (0,0,0,PREPEND.)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (0,0,0,PREPEND.)
 a | b | c |    d     
---+---+---+----------
 0 | 0 | 0 | PREPEND.
(1 row)

SELECT * FROM gogudb_partition_table._test_inserts_11_storage;
 a | b | c |    d     
---+---+---+----------
 0 | 0 | 0 | PREPEND.
(1 row)

INSERT INTO test_inserts.storage VALUES(1, 0, 0, 'PREPEND..') RETURNING tableoid::regclass;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (1,0,0,PREPEND..)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (1,0,0,PREPEND..)
                    tableoid                     
-------------------------------------------------
 gogudb_partition_table._test_inserts_11_storage
(1 row)

SELECT * FROM gogudb_partition_table._test_inserts_11_storage;
 a | b | c |     d     
---+---+---+-----------
 0 | 0 | 0 | PREPEND.
 1 | 0 | 0 | PREPEND..
(2 rows)

INSERT INTO test_inserts.storage VALUES(3, 0, 0, 'PREPEND...') RETURNING a + b / 3;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (3,0,0,PREPEND...)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (3,0,0,PREPEND...)
 ?column? 
----------
        3
(1 row)

SELECT * FROM gogudb_partition_table._test_inserts_11_storage;
 a | b | c |     d      
---+---+---+------------
 0 | 0 | 0 | PREPEND.
 1 | 0 | 0 | PREPEND..
 3 | 0 | 0 | PREPEND...
(3 rows)

/* cause an unique index conflict (a = 0) */
INSERT INTO test_inserts.storage VALUES(0, 0, 0, 'CONFLICT') RETURNING *;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (0,0,0,CONFLICT)
ERROR:  duplicate key value violates unique constraint "_test_inserts_11_storage_a_idx"
/* drop first column */
ALTER TABLE test_inserts.storage DROP COLUMN a CASCADE;
/* will have 3 columns (b, c, d) */
SELECT append_range_partition('test_inserts.storage');
             append_range_partition              
-------------------------------------------------
 gogudb_partition_table._test_inserts_12_storage
(1 row)

INSERT INTO test_inserts.storage (b, c, d) VALUES (101, 17, '3 cols!');
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (101,17,"3 cols!")
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (101,17,"3 cols!")
SELECT * FROM gogudb_partition_table._test_inserts_12_storage; /* direct access */
  b  | c  |    d    
-----+----+---------
 101 | 17 | 3 cols!
(1 row)

SELECT * FROM test_inserts.storage WHERE b > 100; /* via parent */
  b  | c  |    d    
-----+----+---------
 101 | 17 | 3 cols!
(1 row)

/* spawn a new partition (b, c, d) */
INSERT INTO test_inserts.storage (b, c, d) VALUES (111, 17, '3 cols as well!');
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,17,"3 cols as well!")
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,17,"3 cols as well!")
SELECT * FROM gogudb_partition_table._test_inserts_13_storage; /* direct access */
  b  | c  |        d        
-----+----+-----------------
 111 | 17 | 3 cols as well!
(1 row)

SELECT * FROM test_inserts.storage WHERE b > 110; /* via parent */
  b  | c  |        d        
-----+----+-----------------
 111 | 17 | 3 cols as well!
(1 row)

/* column 'a' has been dropped */
INSERT INTO test_inserts.storage VALUES(111, 0, 'DROP_COL_1.') RETURNING *, 17;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,0,DROP_COL_1.)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,0,DROP_COL_1.)
  b  | c |      d      | ?column? 
-----+---+-------------+----------
 111 | 0 | DROP_COL_1. |       17
(1 row)

INSERT INTO test_inserts.storage VALUES(111, 0, 'DROP_COL_1..') RETURNING tableoid::regclass;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,0,DROP_COL_1..)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,0,DROP_COL_1..)
                    tableoid                     
-------------------------------------------------
 gogudb_partition_table._test_inserts_13_storage
(1 row)

INSERT INTO test_inserts.storage VALUES(111, 0, 'DROP_COL_1...') RETURNING b * 2, b;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,0,DROP_COL_1...)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,0,DROP_COL_1...)
 ?column? |  b  
----------+-----
      222 | 111
(1 row)

/* drop third column */
ALTER TABLE test_inserts.storage DROP COLUMN c CASCADE;
/* will have 2 columns (b, d) */
SELECT append_range_partition('test_inserts.storage');
             append_range_partition              
-------------------------------------------------
 gogudb_partition_table._test_inserts_14_storage
(1 row)

INSERT INTO test_inserts.storage (b, d) VALUES (121, '2 cols!');
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,"2 cols!")
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,"2 cols!")
SELECT * FROM gogudb_partition_table._test_inserts_14_storage; /* direct access */
  b  |    d    
-----+---------
 121 | 2 cols!
(1 row)

SELECT * FROM test_inserts.storage WHERE b > 120; /* via parent */
  b  |    d    
-----+---------
 121 | 2 cols!
(1 row)

/* column 'c' has been dropped */
INSERT INTO test_inserts.storage VALUES(121, 'DROP_COL_2.') RETURNING *;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,DROP_COL_2.)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,DROP_COL_2.)
  b  |      d      
-----+-------------
 121 | DROP_COL_2.
(1 row)

INSERT INTO test_inserts.storage VALUES(121, 'DROP_COL_2..') RETURNING tableoid::regclass;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,DROP_COL_2..)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,DROP_COL_2..)
                    tableoid                     
-------------------------------------------------
 gogudb_partition_table._test_inserts_14_storage
(1 row)

INSERT INTO test_inserts.storage VALUES(121, 'DROP_COL_2...') RETURNING d || '0_0', b * 3;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,DROP_COL_2...)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,DROP_COL_2...)
     ?column?     | ?column? 
------------------+----------
 DROP_COL_2...0_0 |      363
(1 row)

INSERT INTO test_inserts.storage VALUES(121, 'query_1')
RETURNING (SELECT 1);
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_1)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_1)
 ?column? 
----------
        1
(1 row)

INSERT INTO test_inserts.storage VALUES(121, 'query_2')
RETURNING (SELECT generate_series(1, 10) LIMIT 1);
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_2)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_2)
 generate_series 
-----------------
               1
(1 row)

INSERT INTO test_inserts.storage VALUES(121, 'query_3')
RETURNING (SELECT get_partition_key('test_inserts.storage'));
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_3)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_3)
 get_partition_key 
-------------------
 b
(1 row)

INSERT INTO test_inserts.storage VALUES(121, 'query_4')
RETURNING 1, 2, 3, 4;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_4)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (121,query_4)
 ?column? | ?column? | ?column? | ?column? 
----------+----------+----------+----------
        1 |        2 |        3 |        4
(1 row)

/* show number of columns in each partition */
SELECT partition, range_min, range_max, count(partition)
FROM gogudb_partition_list JOIN pg_attribute ON partition = attrelid
WHERE attnum > 0
GROUP BY partition, range_min, range_max
ORDER BY range_min::INT4;
                    partition                    | range_min | range_max | count 
-------------------------------------------------+-----------+-----------+-------
 gogudb_partition_table._test_inserts_11_storage | -9        | 1         |     4
 gogudb_partition_table._test_inserts_1_storage  | 1         | 11        |     4
 gogudb_partition_table._test_inserts_2_storage  | 11        | 21        |     4
 gogudb_partition_table._test_inserts_3_storage  | 21        | 31        |     4
 gogudb_partition_table._test_inserts_4_storage  | 31        | 41        |     4
 gogudb_partition_table._test_inserts_5_storage  | 41        | 51        |     4
 gogudb_partition_table._test_inserts_6_storage  | 51        | 61        |     4
 gogudb_partition_table._test_inserts_7_storage  | 61        | 71        |     4
 gogudb_partition_table._test_inserts_8_storage  | 71        | 81        |     4
 gogudb_partition_table._test_inserts_9_storage  | 81        | 91        |     4
 gogudb_partition_table._test_inserts_10_storage | 91        | 101       |     4
 gogudb_partition_table._test_inserts_12_storage | 101       | 111       |     3
 gogudb_partition_table._test_inserts_13_storage | 111       | 121       |     3
 gogudb_partition_table._test_inserts_14_storage | 121       | 131       |     2
(14 rows)

/* check the data */
SELECT *, tableoid::regclass FROM test_inserts.storage ORDER BY b, d;
  b  |        d        |                    tableoid                     
-----+-----------------+-------------------------------------------------
   0 | PREPEND.        | gogudb_partition_table._test_inserts_11_storage
   0 | PREPEND..       | gogudb_partition_table._test_inserts_11_storage
   0 | PREPEND...      | gogudb_partition_table._test_inserts_11_storage
   1 | 1               | gogudb_partition_table._test_inserts_1_storage
   2 | 2               | gogudb_partition_table._test_inserts_1_storage
   3 | 3               | gogudb_partition_table._test_inserts_1_storage
   4 | 4               | gogudb_partition_table._test_inserts_1_storage
   5 | 5               | gogudb_partition_table._test_inserts_1_storage
   6 | 6               | gogudb_partition_table._test_inserts_1_storage
   7 | 7               | gogudb_partition_table._test_inserts_1_storage
   8 | 8               | gogudb_partition_table._test_inserts_1_storage
   9 | 9               | gogudb_partition_table._test_inserts_1_storage
  10 | 10              | gogudb_partition_table._test_inserts_1_storage
  11 | 11              | gogudb_partition_table._test_inserts_2_storage
  12 | 12              | gogudb_partition_table._test_inserts_2_storage
  13 | 13              | gogudb_partition_table._test_inserts_2_storage
  14 | 14              | gogudb_partition_table._test_inserts_2_storage
  15 | 15              | gogudb_partition_table._test_inserts_2_storage
  16 | 16              | gogudb_partition_table._test_inserts_2_storage
  17 | 17              | gogudb_partition_table._test_inserts_2_storage
  18 | 18              | gogudb_partition_table._test_inserts_2_storage
  19 | 19              | gogudb_partition_table._test_inserts_2_storage
  20 | 20              | gogudb_partition_table._test_inserts_2_storage
  21 | 21              | gogudb_partition_table._test_inserts_3_storage
  22 | 22              | gogudb_partition_table._test_inserts_3_storage
  23 | 23              | gogudb_partition_table._test_inserts_3_storage
  24 | 24              | gogudb_partition_table._test_inserts_3_storage
  25 | 25              | gogudb_partition_table._test_inserts_3_storage
  26 | 26              | gogudb_partition_table._test_inserts_3_storage
  27 | 27              | gogudb_partition_table._test_inserts_3_storage
  28 | 28              | gogudb_partition_table._test_inserts_3_storage
  29 | 29              | gogudb_partition_table._test_inserts_3_storage
  30 | 30              | gogudb_partition_table._test_inserts_3_storage
  31 | 31              | gogudb_partition_table._test_inserts_4_storage
  32 | 32              | gogudb_partition_table._test_inserts_4_storage
  33 | 33              | gogudb_partition_table._test_inserts_4_storage
  34 | 34              | gogudb_partition_table._test_inserts_4_storage
  35 | 35              | gogudb_partition_table._test_inserts_4_storage
  36 | 36              | gogudb_partition_table._test_inserts_4_storage
  37 | 37              | gogudb_partition_table._test_inserts_4_storage
  38 | 38              | gogudb_partition_table._test_inserts_4_storage
  39 | 39              | gogudb_partition_table._test_inserts_4_storage
  40 | 40              | gogudb_partition_table._test_inserts_4_storage
  41 | 41              | gogudb_partition_table._test_inserts_5_storage
  42 | 42              | gogudb_partition_table._test_inserts_5_storage
  43 | 43              | gogudb_partition_table._test_inserts_5_storage
  44 | 44              | gogudb_partition_table._test_inserts_5_storage
  45 | 45              | gogudb_partition_table._test_inserts_5_storage
  46 | 46              | gogudb_partition_table._test_inserts_5_storage
  47 | 47              | gogudb_partition_table._test_inserts_5_storage
  48 | 48              | gogudb_partition_table._test_inserts_5_storage
  49 | 49              | gogudb_partition_table._test_inserts_5_storage
  50 | 50              | gogudb_partition_table._test_inserts_5_storage
  51 | 51              | gogudb_partition_table._test_inserts_6_storage
  52 | 52              | gogudb_partition_table._test_inserts_6_storage
  53 | 53              | gogudb_partition_table._test_inserts_6_storage
  54 | 54              | gogudb_partition_table._test_inserts_6_storage
  55 | 55              | gogudb_partition_table._test_inserts_6_storage
  56 | 56              | gogudb_partition_table._test_inserts_6_storage
  57 | 57              | gogudb_partition_table._test_inserts_6_storage
  58 | 58              | gogudb_partition_table._test_inserts_6_storage
  59 | 59              | gogudb_partition_table._test_inserts_6_storage
  60 | 60              | gogudb_partition_table._test_inserts_6_storage
  61 | 61              | gogudb_partition_table._test_inserts_7_storage
  62 | 62              | gogudb_partition_table._test_inserts_7_storage
  63 | 63              | gogudb_partition_table._test_inserts_7_storage
  64 | 64              | gogudb_partition_table._test_inserts_7_storage
  65 | 65              | gogudb_partition_table._test_inserts_7_storage
  66 | 66              | gogudb_partition_table._test_inserts_7_storage
  67 | 67              | gogudb_partition_table._test_inserts_7_storage
  68 | 68              | gogudb_partition_table._test_inserts_7_storage
  69 | 69              | gogudb_partition_table._test_inserts_7_storage
  70 | 70              | gogudb_partition_table._test_inserts_7_storage
  71 | 71              | gogudb_partition_table._test_inserts_8_storage
  72 | 72              | gogudb_partition_table._test_inserts_8_storage
  73 | 73              | gogudb_partition_table._test_inserts_8_storage
  74 | 74              | gogudb_partition_table._test_inserts_8_storage
  75 | 75              | gogudb_partition_table._test_inserts_8_storage
  76 | 76              | gogudb_partition_table._test_inserts_8_storage
  77 | 77              | gogudb_partition_table._test_inserts_8_storage
  78 | 78              | gogudb_partition_table._test_inserts_8_storage
  79 | 79              | gogudb_partition_table._test_inserts_8_storage
  80 | 80              | gogudb_partition_table._test_inserts_8_storage
  81 | 81              | gogudb_partition_table._test_inserts_9_storage
  82 | 82              | gogudb_partition_table._test_inserts_9_storage
  83 | 83              | gogudb_partition_table._test_inserts_9_storage
  84 | 84              | gogudb_partition_table._test_inserts_9_storage
  85 | 85              | gogudb_partition_table._test_inserts_9_storage
  86 | 86              | gogudb_partition_table._test_inserts_9_storage
  87 | 87              | gogudb_partition_table._test_inserts_9_storage
  88 | 88              | gogudb_partition_table._test_inserts_9_storage
  89 | 89              | gogudb_partition_table._test_inserts_9_storage
  90 | 90              | gogudb_partition_table._test_inserts_9_storage
  91 | 91              | gogudb_partition_table._test_inserts_10_storage
  92 | 92              | gogudb_partition_table._test_inserts_10_storage
  93 | 93              | gogudb_partition_table._test_inserts_10_storage
  94 | 94              | gogudb_partition_table._test_inserts_10_storage
  95 | 95              | gogudb_partition_table._test_inserts_10_storage
  96 | 96              | gogudb_partition_table._test_inserts_10_storage
  97 | 97              | gogudb_partition_table._test_inserts_10_storage
  98 | 98              | gogudb_partition_table._test_inserts_10_storage
  99 | 99              | gogudb_partition_table._test_inserts_10_storage
 100 | 100             | gogudb_partition_table._test_inserts_10_storage
 101 | 3 cols!         | gogudb_partition_table._test_inserts_12_storage
 111 | 3 cols as well! | gogudb_partition_table._test_inserts_13_storage
 111 | DROP_COL_1.     | gogudb_partition_table._test_inserts_13_storage
 111 | DROP_COL_1..    | gogudb_partition_table._test_inserts_13_storage
 111 | DROP_COL_1...   | gogudb_partition_table._test_inserts_13_storage
 121 | 2 cols!         | gogudb_partition_table._test_inserts_14_storage
 121 | DROP_COL_2.     | gogudb_partition_table._test_inserts_14_storage
 121 | DROP_COL_2..    | gogudb_partition_table._test_inserts_14_storage
 121 | DROP_COL_2...   | gogudb_partition_table._test_inserts_14_storage
 121 | query_1         | gogudb_partition_table._test_inserts_14_storage
 121 | query_2         | gogudb_partition_table._test_inserts_14_storage
 121 | query_3         | gogudb_partition_table._test_inserts_14_storage
 121 | query_4         | gogudb_partition_table._test_inserts_14_storage
(116 rows)

/* drop data */
TRUNCATE test_inserts.storage;
/* one more time! */
INSERT INTO test_inserts.storage (b, d) SELECT i, i FROM generate_series(-2, 120) i;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-2,-2)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-1,-1)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (0,0)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (1,1)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (2,2)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (3,3)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (4,4)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (5,5)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (6,6)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (7,7)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (8,8)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (9,9)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (10,10)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (101,101)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (102,102)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (103,103)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (104,104)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (105,105)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (106,106)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (107,107)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (108,108)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (109,109)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (110,110)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,111)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (112,112)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (113,113)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (114,114)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (115,115)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (116,116)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (117,117)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (118,118)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (119,119)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (120,120)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-2,-2)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-1,-1)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (0,0)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (1,1)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (2,2)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (3,3)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (4,4)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (5,5)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (6,6)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (7,7)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (8,8)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (9,9)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (10,10)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (101,101)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (102,102)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (103,103)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (104,104)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (105,105)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (106,106)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (107,107)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (108,108)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (109,109)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (110,110)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,111)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (112,112)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (113,113)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (114,114)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (115,115)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (116,116)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (117,117)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (118,118)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (119,119)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (120,120)
SELECT *, tableoid::regclass FROM test_inserts.storage ORDER BY b, d;
  b  |  d  |                    tableoid                     
-----+-----+-------------------------------------------------
  -2 | -2  | gogudb_partition_table._test_inserts_11_storage
  -1 | -1  | gogudb_partition_table._test_inserts_11_storage
   0 | 0   | gogudb_partition_table._test_inserts_11_storage
   1 | 1   | gogudb_partition_table._test_inserts_1_storage
   2 | 2   | gogudb_partition_table._test_inserts_1_storage
   3 | 3   | gogudb_partition_table._test_inserts_1_storage
   4 | 4   | gogudb_partition_table._test_inserts_1_storage
   5 | 5   | gogudb_partition_table._test_inserts_1_storage
   6 | 6   | gogudb_partition_table._test_inserts_1_storage
   7 | 7   | gogudb_partition_table._test_inserts_1_storage
   8 | 8   | gogudb_partition_table._test_inserts_1_storage
   9 | 9   | gogudb_partition_table._test_inserts_1_storage
  10 | 10  | gogudb_partition_table._test_inserts_1_storage
  11 | 11  | gogudb_partition_table._test_inserts_2_storage
  12 | 12  | gogudb_partition_table._test_inserts_2_storage
  13 | 13  | gogudb_partition_table._test_inserts_2_storage
  14 | 14  | gogudb_partition_table._test_inserts_2_storage
  15 | 15  | gogudb_partition_table._test_inserts_2_storage
  16 | 16  | gogudb_partition_table._test_inserts_2_storage
  17 | 17  | gogudb_partition_table._test_inserts_2_storage
  18 | 18  | gogudb_partition_table._test_inserts_2_storage
  19 | 19  | gogudb_partition_table._test_inserts_2_storage
  20 | 20  | gogudb_partition_table._test_inserts_2_storage
  21 | 21  | gogudb_partition_table._test_inserts_3_storage
  22 | 22  | gogudb_partition_table._test_inserts_3_storage
  23 | 23  | gogudb_partition_table._test_inserts_3_storage
  24 | 24  | gogudb_partition_table._test_inserts_3_storage
  25 | 25  | gogudb_partition_table._test_inserts_3_storage
  26 | 26  | gogudb_partition_table._test_inserts_3_storage
  27 | 27  | gogudb_partition_table._test_inserts_3_storage
  28 | 28  | gogudb_partition_table._test_inserts_3_storage
  29 | 29  | gogudb_partition_table._test_inserts_3_storage
  30 | 30  | gogudb_partition_table._test_inserts_3_storage
  31 | 31  | gogudb_partition_table._test_inserts_4_storage
  32 | 32  | gogudb_partition_table._test_inserts_4_storage
  33 | 33  | gogudb_partition_table._test_inserts_4_storage
  34 | 34  | gogudb_partition_table._test_inserts_4_storage
  35 | 35  | gogudb_partition_table._test_inserts_4_storage
  36 | 36  | gogudb_partition_table._test_inserts_4_storage
  37 | 37  | gogudb_partition_table._test_inserts_4_storage
  38 | 38  | gogudb_partition_table._test_inserts_4_storage
  39 | 39  | gogudb_partition_table._test_inserts_4_storage
  40 | 40  | gogudb_partition_table._test_inserts_4_storage
  41 | 41  | gogudb_partition_table._test_inserts_5_storage
  42 | 42  | gogudb_partition_table._test_inserts_5_storage
  43 | 43  | gogudb_partition_table._test_inserts_5_storage
  44 | 44  | gogudb_partition_table._test_inserts_5_storage
  45 | 45  | gogudb_partition_table._test_inserts_5_storage
  46 | 46  | gogudb_partition_table._test_inserts_5_storage
  47 | 47  | gogudb_partition_table._test_inserts_5_storage
  48 | 48  | gogudb_partition_table._test_inserts_5_storage
  49 | 49  | gogudb_partition_table._test_inserts_5_storage
  50 | 50  | gogudb_partition_table._test_inserts_5_storage
  51 | 51  | gogudb_partition_table._test_inserts_6_storage
  52 | 52  | gogudb_partition_table._test_inserts_6_storage
  53 | 53  | gogudb_partition_table._test_inserts_6_storage
  54 | 54  | gogudb_partition_table._test_inserts_6_storage
  55 | 55  | gogudb_partition_table._test_inserts_6_storage
  56 | 56  | gogudb_partition_table._test_inserts_6_storage
  57 | 57  | gogudb_partition_table._test_inserts_6_storage
  58 | 58  | gogudb_partition_table._test_inserts_6_storage
  59 | 59  | gogudb_partition_table._test_inserts_6_storage
  60 | 60  | gogudb_partition_table._test_inserts_6_storage
  61 | 61  | gogudb_partition_table._test_inserts_7_storage
  62 | 62  | gogudb_partition_table._test_inserts_7_storage
  63 | 63  | gogudb_partition_table._test_inserts_7_storage
  64 | 64  | gogudb_partition_table._test_inserts_7_storage
  65 | 65  | gogudb_partition_table._test_inserts_7_storage
  66 | 66  | gogudb_partition_table._test_inserts_7_storage
  67 | 67  | gogudb_partition_table._test_inserts_7_storage
  68 | 68  | gogudb_partition_table._test_inserts_7_storage
  69 | 69  | gogudb_partition_table._test_inserts_7_storage
  70 | 70  | gogudb_partition_table._test_inserts_7_storage
  71 | 71  | gogudb_partition_table._test_inserts_8_storage
  72 | 72  | gogudb_partition_table._test_inserts_8_storage
  73 | 73  | gogudb_partition_table._test_inserts_8_storage
  74 | 74  | gogudb_partition_table._test_inserts_8_storage
  75 | 75  | gogudb_partition_table._test_inserts_8_storage
  76 | 76  | gogudb_partition_table._test_inserts_8_storage
  77 | 77  | gogudb_partition_table._test_inserts_8_storage
  78 | 78  | gogudb_partition_table._test_inserts_8_storage
  79 | 79  | gogudb_partition_table._test_inserts_8_storage
  80 | 80  | gogudb_partition_table._test_inserts_8_storage
  81 | 81  | gogudb_partition_table._test_inserts_9_storage
  82 | 82  | gogudb_partition_table._test_inserts_9_storage
  83 | 83  | gogudb_partition_table._test_inserts_9_storage
  84 | 84  | gogudb_partition_table._test_inserts_9_storage
  85 | 85  | gogudb_partition_table._test_inserts_9_storage
  86 | 86  | gogudb_partition_table._test_inserts_9_storage
  87 | 87  | gogudb_partition_table._test_inserts_9_storage
  88 | 88  | gogudb_partition_table._test_inserts_9_storage
  89 | 89  | gogudb_partition_table._test_inserts_9_storage
  90 | 90  | gogudb_partition_table._test_inserts_9_storage
  91 | 91  | gogudb_partition_table._test_inserts_10_storage
  92 | 92  | gogudb_partition_table._test_inserts_10_storage
  93 | 93  | gogudb_partition_table._test_inserts_10_storage
  94 | 94  | gogudb_partition_table._test_inserts_10_storage
  95 | 95  | gogudb_partition_table._test_inserts_10_storage
  96 | 96  | gogudb_partition_table._test_inserts_10_storage
  97 | 97  | gogudb_partition_table._test_inserts_10_storage
  98 | 98  | gogudb_partition_table._test_inserts_10_storage
  99 | 99  | gogudb_partition_table._test_inserts_10_storage
 100 | 100 | gogudb_partition_table._test_inserts_10_storage
 101 | 101 | gogudb_partition_table._test_inserts_12_storage
 102 | 102 | gogudb_partition_table._test_inserts_12_storage
 103 | 103 | gogudb_partition_table._test_inserts_12_storage
 104 | 104 | gogudb_partition_table._test_inserts_12_storage
 105 | 105 | gogudb_partition_table._test_inserts_12_storage
 106 | 106 | gogudb_partition_table._test_inserts_12_storage
 107 | 107 | gogudb_partition_table._test_inserts_12_storage
 108 | 108 | gogudb_partition_table._test_inserts_12_storage
 109 | 109 | gogudb_partition_table._test_inserts_12_storage
 110 | 110 | gogudb_partition_table._test_inserts_12_storage
 111 | 111 | gogudb_partition_table._test_inserts_13_storage
 112 | 112 | gogudb_partition_table._test_inserts_13_storage
 113 | 113 | gogudb_partition_table._test_inserts_13_storage
 114 | 114 | gogudb_partition_table._test_inserts_13_storage
 115 | 115 | gogudb_partition_table._test_inserts_13_storage
 116 | 116 | gogudb_partition_table._test_inserts_13_storage
 117 | 117 | gogudb_partition_table._test_inserts_13_storage
 118 | 118 | gogudb_partition_table._test_inserts_13_storage
 119 | 119 | gogudb_partition_table._test_inserts_13_storage
 120 | 120 | gogudb_partition_table._test_inserts_13_storage
(123 rows)

/* drop data */
TRUNCATE test_inserts.storage;
/* add new column */
ALTER TABLE test_inserts.storage ADD COLUMN e INT8 NOT NULL;
/* one more time! x2 */
INSERT INTO test_inserts.storage (b, d, e) SELECT i, i, i FROM generate_series(-2, 120) i;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-2,-2,-2)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-1,-1,-1)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (0,0,0)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (1,1,1)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (2,2,2)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (3,3,3)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (4,4,4)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (5,5,5)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (6,6,6)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (7,7,7)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (8,8,8)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (9,9,9)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (10,10,10)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (101,101,101)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (102,102,102)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (103,103,103)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (104,104,104)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (105,105,105)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (106,106,106)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (107,107,107)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (108,108,108)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (109,109,109)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (110,110,110)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,111,111)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (112,112,112)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (113,113,113)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (114,114,114)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (115,115,115)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (116,116,116)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (117,117,117)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (118,118,118)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (119,119,119)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (120,120,120)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-2,-2,-2)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-1,-1,-1)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (0,0,0)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (1,1,1)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (2,2,2)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (3,3,3)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (4,4,4)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (5,5,5)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (6,6,6)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (7,7,7)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (8,8,8)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (9,9,9)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (10,10,10)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (101,101,101)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (102,102,102)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (103,103,103)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (104,104,104)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (105,105,105)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (106,106,106)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (107,107,107)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (108,108,108)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (109,109,109)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (110,110,110)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (111,111,111)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (112,112,112)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (113,113,113)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (114,114,114)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (115,115,115)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (116,116,116)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (117,117,117)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (118,118,118)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (119,119,119)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (120,120,120)
SELECT *, tableoid::regclass FROM test_inserts.storage ORDER BY b, d;
  b  |  d  |  e  |                    tableoid                     
-----+-----+-----+-------------------------------------------------
  -2 | -2  |  -2 | gogudb_partition_table._test_inserts_11_storage
  -1 | -1  |  -1 | gogudb_partition_table._test_inserts_11_storage
   0 | 0   |   0 | gogudb_partition_table._test_inserts_11_storage
   1 | 1   |   1 | gogudb_partition_table._test_inserts_1_storage
   2 | 2   |   2 | gogudb_partition_table._test_inserts_1_storage
   3 | 3   |   3 | gogudb_partition_table._test_inserts_1_storage
   4 | 4   |   4 | gogudb_partition_table._test_inserts_1_storage
   5 | 5   |   5 | gogudb_partition_table._test_inserts_1_storage
   6 | 6   |   6 | gogudb_partition_table._test_inserts_1_storage
   7 | 7   |   7 | gogudb_partition_table._test_inserts_1_storage
   8 | 8   |   8 | gogudb_partition_table._test_inserts_1_storage
   9 | 9   |   9 | gogudb_partition_table._test_inserts_1_storage
  10 | 10  |  10 | gogudb_partition_table._test_inserts_1_storage
  11 | 11  |  11 | gogudb_partition_table._test_inserts_2_storage
  12 | 12  |  12 | gogudb_partition_table._test_inserts_2_storage
  13 | 13  |  13 | gogudb_partition_table._test_inserts_2_storage
  14 | 14  |  14 | gogudb_partition_table._test_inserts_2_storage
  15 | 15  |  15 | gogudb_partition_table._test_inserts_2_storage
  16 | 16  |  16 | gogudb_partition_table._test_inserts_2_storage
  17 | 17  |  17 | gogudb_partition_table._test_inserts_2_storage
  18 | 18  |  18 | gogudb_partition_table._test_inserts_2_storage
  19 | 19  |  19 | gogudb_partition_table._test_inserts_2_storage
  20 | 20  |  20 | gogudb_partition_table._test_inserts_2_storage
  21 | 21  |  21 | gogudb_partition_table._test_inserts_3_storage
  22 | 22  |  22 | gogudb_partition_table._test_inserts_3_storage
  23 | 23  |  23 | gogudb_partition_table._test_inserts_3_storage
  24 | 24  |  24 | gogudb_partition_table._test_inserts_3_storage
  25 | 25  |  25 | gogudb_partition_table._test_inserts_3_storage
  26 | 26  |  26 | gogudb_partition_table._test_inserts_3_storage
  27 | 27  |  27 | gogudb_partition_table._test_inserts_3_storage
  28 | 28  |  28 | gogudb_partition_table._test_inserts_3_storage
  29 | 29  |  29 | gogudb_partition_table._test_inserts_3_storage
  30 | 30  |  30 | gogudb_partition_table._test_inserts_3_storage
  31 | 31  |  31 | gogudb_partition_table._test_inserts_4_storage
  32 | 32  |  32 | gogudb_partition_table._test_inserts_4_storage
  33 | 33  |  33 | gogudb_partition_table._test_inserts_4_storage
  34 | 34  |  34 | gogudb_partition_table._test_inserts_4_storage
  35 | 35  |  35 | gogudb_partition_table._test_inserts_4_storage
  36 | 36  |  36 | gogudb_partition_table._test_inserts_4_storage
  37 | 37  |  37 | gogudb_partition_table._test_inserts_4_storage
  38 | 38  |  38 | gogudb_partition_table._test_inserts_4_storage
  39 | 39  |  39 | gogudb_partition_table._test_inserts_4_storage
  40 | 40  |  40 | gogudb_partition_table._test_inserts_4_storage
  41 | 41  |  41 | gogudb_partition_table._test_inserts_5_storage
  42 | 42  |  42 | gogudb_partition_table._test_inserts_5_storage
  43 | 43  |  43 | gogudb_partition_table._test_inserts_5_storage
  44 | 44  |  44 | gogudb_partition_table._test_inserts_5_storage
  45 | 45  |  45 | gogudb_partition_table._test_inserts_5_storage
  46 | 46  |  46 | gogudb_partition_table._test_inserts_5_storage
  47 | 47  |  47 | gogudb_partition_table._test_inserts_5_storage
  48 | 48  |  48 | gogudb_partition_table._test_inserts_5_storage
  49 | 49  |  49 | gogudb_partition_table._test_inserts_5_storage
  50 | 50  |  50 | gogudb_partition_table._test_inserts_5_storage
  51 | 51  |  51 | gogudb_partition_table._test_inserts_6_storage
  52 | 52  |  52 | gogudb_partition_table._test_inserts_6_storage
  53 | 53  |  53 | gogudb_partition_table._test_inserts_6_storage
  54 | 54  |  54 | gogudb_partition_table._test_inserts_6_storage
  55 | 55  |  55 | gogudb_partition_table._test_inserts_6_storage
  56 | 56  |  56 | gogudb_partition_table._test_inserts_6_storage
  57 | 57  |  57 | gogudb_partition_table._test_inserts_6_storage
  58 | 58  |  58 | gogudb_partition_table._test_inserts_6_storage
  59 | 59  |  59 | gogudb_partition_table._test_inserts_6_storage
  60 | 60  |  60 | gogudb_partition_table._test_inserts_6_storage
  61 | 61  |  61 | gogudb_partition_table._test_inserts_7_storage
  62 | 62  |  62 | gogudb_partition_table._test_inserts_7_storage
  63 | 63  |  63 | gogudb_partition_table._test_inserts_7_storage
  64 | 64  |  64 | gogudb_partition_table._test_inserts_7_storage
  65 | 65  |  65 | gogudb_partition_table._test_inserts_7_storage
  66 | 66  |  66 | gogudb_partition_table._test_inserts_7_storage
  67 | 67  |  67 | gogudb_partition_table._test_inserts_7_storage
  68 | 68  |  68 | gogudb_partition_table._test_inserts_7_storage
  69 | 69  |  69 | gogudb_partition_table._test_inserts_7_storage
  70 | 70  |  70 | gogudb_partition_table._test_inserts_7_storage
  71 | 71  |  71 | gogudb_partition_table._test_inserts_8_storage
  72 | 72  |  72 | gogudb_partition_table._test_inserts_8_storage
  73 | 73  |  73 | gogudb_partition_table._test_inserts_8_storage
  74 | 74  |  74 | gogudb_partition_table._test_inserts_8_storage
  75 | 75  |  75 | gogudb_partition_table._test_inserts_8_storage
  76 | 76  |  76 | gogudb_partition_table._test_inserts_8_storage
  77 | 77  |  77 | gogudb_partition_table._test_inserts_8_storage
  78 | 78  |  78 | gogudb_partition_table._test_inserts_8_storage
  79 | 79  |  79 | gogudb_partition_table._test_inserts_8_storage
  80 | 80  |  80 | gogudb_partition_table._test_inserts_8_storage
  81 | 81  |  81 | gogudb_partition_table._test_inserts_9_storage
  82 | 82  |  82 | gogudb_partition_table._test_inserts_9_storage
  83 | 83  |  83 | gogudb_partition_table._test_inserts_9_storage
  84 | 84  |  84 | gogudb_partition_table._test_inserts_9_storage
  85 | 85  |  85 | gogudb_partition_table._test_inserts_9_storage
  86 | 86  |  86 | gogudb_partition_table._test_inserts_9_storage
  87 | 87  |  87 | gogudb_partition_table._test_inserts_9_storage
  88 | 88  |  88 | gogudb_partition_table._test_inserts_9_storage
  89 | 89  |  89 | gogudb_partition_table._test_inserts_9_storage
  90 | 90  |  90 | gogudb_partition_table._test_inserts_9_storage
  91 | 91  |  91 | gogudb_partition_table._test_inserts_10_storage
  92 | 92  |  92 | gogudb_partition_table._test_inserts_10_storage
  93 | 93  |  93 | gogudb_partition_table._test_inserts_10_storage
  94 | 94  |  94 | gogudb_partition_table._test_inserts_10_storage
  95 | 95  |  95 | gogudb_partition_table._test_inserts_10_storage
  96 | 96  |  96 | gogudb_partition_table._test_inserts_10_storage
  97 | 97  |  97 | gogudb_partition_table._test_inserts_10_storage
  98 | 98  |  98 | gogudb_partition_table._test_inserts_10_storage
  99 | 99  |  99 | gogudb_partition_table._test_inserts_10_storage
 100 | 100 | 100 | gogudb_partition_table._test_inserts_10_storage
 101 | 101 | 101 | gogudb_partition_table._test_inserts_12_storage
 102 | 102 | 102 | gogudb_partition_table._test_inserts_12_storage
 103 | 103 | 103 | gogudb_partition_table._test_inserts_12_storage
 104 | 104 | 104 | gogudb_partition_table._test_inserts_12_storage
 105 | 105 | 105 | gogudb_partition_table._test_inserts_12_storage
 106 | 106 | 106 | gogudb_partition_table._test_inserts_12_storage
 107 | 107 | 107 | gogudb_partition_table._test_inserts_12_storage
 108 | 108 | 108 | gogudb_partition_table._test_inserts_12_storage
 109 | 109 | 109 | gogudb_partition_table._test_inserts_12_storage
 110 | 110 | 110 | gogudb_partition_table._test_inserts_12_storage
 111 | 111 | 111 | gogudb_partition_table._test_inserts_13_storage
 112 | 112 | 112 | gogudb_partition_table._test_inserts_13_storage
 113 | 113 | 113 | gogudb_partition_table._test_inserts_13_storage
 114 | 114 | 114 | gogudb_partition_table._test_inserts_13_storage
 115 | 115 | 115 | gogudb_partition_table._test_inserts_13_storage
 116 | 116 | 116 | gogudb_partition_table._test_inserts_13_storage
 117 | 117 | 117 | gogudb_partition_table._test_inserts_13_storage
 118 | 118 | 118 | gogudb_partition_table._test_inserts_13_storage
 119 | 119 | 119 | gogudb_partition_table._test_inserts_13_storage
 120 | 120 | 120 | gogudb_partition_table._test_inserts_13_storage
(123 rows)

/* drop data */
TRUNCATE test_inserts.storage;
/* now test RETURNING list using our new column 'e' */
INSERT INTO test_inserts.storage (b, d, e) SELECT i, i, i
FROM generate_series(-2, 130, 5) i
RETURNING e * 2, b, tableoid::regclass;
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-2,-2,-2)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (3,3,3)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (8,8,8)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (103,103,103)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (108,108,108)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (113,113,113)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (118,118,118)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (123,123,123)
NOTICE:  BEFORE INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (128,128,128)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_11_storage HAS EXPIRED. INSERTED ROW: (-2,-2,-2)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (3,3,3)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_1_storage HAS EXPIRED. INSERTED ROW: (8,8,8)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (103,103,103)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_12_storage HAS EXPIRED. INSERTED ROW: (108,108,108)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (113,113,113)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_13_storage HAS EXPIRED. INSERTED ROW: (118,118,118)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (123,123,123)
NOTICE:  AFTER INSERTION TRIGGER ON TABLE _test_inserts_14_storage HAS EXPIRED. INSERTED ROW: (128,128,128)
 ?column? |  b  |                    tableoid                     
----------+-----+-------------------------------------------------
       -4 |  -2 | gogudb_partition_table._test_inserts_11_storage
        6 |   3 | gogudb_partition_table._test_inserts_1_storage
       16 |   8 | gogudb_partition_table._test_inserts_1_storage
       26 |  13 | gogudb_partition_table._test_inserts_2_storage
       36 |  18 | gogudb_partition_table._test_inserts_2_storage
       46 |  23 | gogudb_partition_table._test_inserts_3_storage
       56 |  28 | gogudb_partition_table._test_inserts_3_storage
       66 |  33 | gogudb_partition_table._test_inserts_4_storage
       76 |  38 | gogudb_partition_table._test_inserts_4_storage
       86 |  43 | gogudb_partition_table._test_inserts_5_storage
       96 |  48 | gogudb_partition_table._test_inserts_5_storage
      106 |  53 | gogudb_partition_table._test_inserts_6_storage
      116 |  58 | gogudb_partition_table._test_inserts_6_storage
      126 |  63 | gogudb_partition_table._test_inserts_7_storage
      136 |  68 | gogudb_partition_table._test_inserts_7_storage
      146 |  73 | gogudb_partition_table._test_inserts_8_storage
      156 |  78 | gogudb_partition_table._test_inserts_8_storage
      166 |  83 | gogudb_partition_table._test_inserts_9_storage
      176 |  88 | gogudb_partition_table._test_inserts_9_storage
      186 |  93 | gogudb_partition_table._test_inserts_10_storage
      196 |  98 | gogudb_partition_table._test_inserts_10_storage
      206 | 103 | gogudb_partition_table._test_inserts_12_storage
      216 | 108 | gogudb_partition_table._test_inserts_12_storage
      226 | 113 | gogudb_partition_table._test_inserts_13_storage
      236 | 118 | gogudb_partition_table._test_inserts_13_storage
      246 | 123 | gogudb_partition_table._test_inserts_14_storage
      256 | 128 | gogudb_partition_table._test_inserts_14_storage
(27 rows)

/* test EXPLAIN (VERBOSE) - for PartitionFilter's targetlists */
EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO test_inserts.storage (b, d, e) SELECT i, i, i
FROM generate_series(1, 10) i
RETURNING e * 2, b, tableoid::regclass;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Insert on test_inserts.storage
   Output: (storage.e * 2), storage.b, (storage.tableoid)::regclass
   ->  Custom Scan (PartitionFilter)
         Output: NULL::integer, storage.b, NULL::integer, storage.d, storage.e
         ->  Function Scan on pg_catalog.generate_series i
               Output: NULL::integer, i.i, NULL::integer, i.i, i.i
               Function Call: generate_series(1, 10)
(7 rows)

EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO test_inserts.storage (d, e) SELECT i, i
FROM generate_series(1, 10) i;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Insert on test_inserts.storage
   ->  Custom Scan (PartitionFilter)
         Output: NULL::integer, storage.b, NULL::integer, storage.d, storage.e
         ->  Function Scan on pg_catalog.generate_series i
               Output: NULL::integer, NULL::integer, NULL::integer, i.i, i.i
               Function Call: generate_series(1, 10)
(6 rows)

EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO test_inserts.storage (b) SELECT i
FROM generate_series(1, 10) i;
                                    QUERY PLAN                                     
-----------------------------------------------------------------------------------
 Insert on test_inserts.storage
   ->  Custom Scan (PartitionFilter)
         Output: NULL::integer, storage.b, NULL::integer, storage.d, storage.e
         ->  Function Scan on pg_catalog.generate_series i
               Output: NULL::integer, i.i, NULL::integer, NULL::text, NULL::bigint
               Function Call: generate_series(1, 10)
(6 rows)

EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO test_inserts.storage (b, d, e) SELECT b, d, e
FROM test_inserts.storage;
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Insert on test_inserts.storage
   ->  Custom Scan (PartitionFilter)
         Output: NULL::integer, storage.b, NULL::integer, storage.d, storage.e
         ->  Result
               Output: NULL::integer, _test_inserts_11_storage.b, NULL::integer, _test_inserts_11_storage.d, _test_inserts_11_storage.e
               ->  Append
                     ->  Seq Scan on gogudb_partition_table._test_inserts_11_storage
                           Output: _test_inserts_11_storage.b, _test_inserts_11_storage.d, _test_inserts_11_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_1_storage
                           Output: _test_inserts_1_storage.b, _test_inserts_1_storage.d, _test_inserts_1_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_2_storage
                           Output: _test_inserts_2_storage.b, _test_inserts_2_storage.d, _test_inserts_2_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_3_storage
                           Output: _test_inserts_3_storage.b, _test_inserts_3_storage.d, _test_inserts_3_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_4_storage
                           Output: _test_inserts_4_storage.b, _test_inserts_4_storage.d, _test_inserts_4_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_5_storage
                           Output: _test_inserts_5_storage.b, _test_inserts_5_storage.d, _test_inserts_5_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_6_storage
                           Output: _test_inserts_6_storage.b, _test_inserts_6_storage.d, _test_inserts_6_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_7_storage
                           Output: _test_inserts_7_storage.b, _test_inserts_7_storage.d, _test_inserts_7_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_8_storage
                           Output: _test_inserts_8_storage.b, _test_inserts_8_storage.d, _test_inserts_8_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_9_storage
                           Output: _test_inserts_9_storage.b, _test_inserts_9_storage.d, _test_inserts_9_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_10_storage
                           Output: _test_inserts_10_storage.b, _test_inserts_10_storage.d, _test_inserts_10_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_12_storage
                           Output: _test_inserts_12_storage.b, _test_inserts_12_storage.d, _test_inserts_12_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_13_storage
                           Output: _test_inserts_13_storage.b, _test_inserts_13_storage.d, _test_inserts_13_storage.e
                     ->  Seq Scan on gogudb_partition_table._test_inserts_14_storage
                           Output: _test_inserts_14_storage.b, _test_inserts_14_storage.d, _test_inserts_14_storage.e
(34 rows)

EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO test_inserts.storage (b, d) SELECT b, d
FROM test_inserts.storage;
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Insert on test_inserts.storage
   ->  Custom Scan (PartitionFilter)
         Output: NULL::integer, storage.b, NULL::integer, storage.d, storage.e
         ->  Result
               Output: NULL::integer, _test_inserts_11_storage.b, NULL::integer, _test_inserts_11_storage.d, NULL::bigint
               ->  Append
                     ->  Seq Scan on gogudb_partition_table._test_inserts_11_storage
                           Output: _test_inserts_11_storage.b, _test_inserts_11_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_1_storage
                           Output: _test_inserts_1_storage.b, _test_inserts_1_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_2_storage
                           Output: _test_inserts_2_storage.b, _test_inserts_2_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_3_storage
                           Output: _test_inserts_3_storage.b, _test_inserts_3_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_4_storage
                           Output: _test_inserts_4_storage.b, _test_inserts_4_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_5_storage
                           Output: _test_inserts_5_storage.b, _test_inserts_5_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_6_storage
                           Output: _test_inserts_6_storage.b, _test_inserts_6_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_7_storage
                           Output: _test_inserts_7_storage.b, _test_inserts_7_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_8_storage
                           Output: _test_inserts_8_storage.b, _test_inserts_8_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_9_storage
                           Output: _test_inserts_9_storage.b, _test_inserts_9_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_10_storage
                           Output: _test_inserts_10_storage.b, _test_inserts_10_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_12_storage
                           Output: _test_inserts_12_storage.b, _test_inserts_12_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_13_storage
                           Output: _test_inserts_13_storage.b, _test_inserts_13_storage.d
                     ->  Seq Scan on gogudb_partition_table._test_inserts_14_storage
                           Output: _test_inserts_14_storage.b, _test_inserts_14_storage.d
(34 rows)

EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO test_inserts.storage (b) SELECT b
FROM test_inserts.storage;
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Insert on test_inserts.storage
   ->  Custom Scan (PartitionFilter)
         Output: NULL::integer, storage.b, NULL::integer, storage.d, storage.e
         ->  Result
               Output: NULL::integer, _test_inserts_11_storage.b, NULL::integer, NULL::text, NULL::bigint
               ->  Append
                     ->  Seq Scan on gogudb_partition_table._test_inserts_11_storage
                           Output: _test_inserts_11_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_1_storage
                           Output: _test_inserts_1_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_2_storage
                           Output: _test_inserts_2_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_3_storage
                           Output: _test_inserts_3_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_4_storage
                           Output: _test_inserts_4_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_5_storage
                           Output: _test_inserts_5_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_6_storage
                           Output: _test_inserts_6_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_7_storage
                           Output: _test_inserts_7_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_8_storage
                           Output: _test_inserts_8_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_9_storage
                           Output: _test_inserts_9_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_10_storage
                           Output: _test_inserts_10_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_12_storage
                           Output: _test_inserts_12_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_13_storage
                           Output: _test_inserts_13_storage.b
                     ->  Seq Scan on gogudb_partition_table._test_inserts_14_storage
                           Output: _test_inserts_14_storage.b
(34 rows)

/* test gap case (missing partition in between) */
CREATE TABLE test_inserts.test_gap(val INT NOT NULL);
INSERT INTO test_inserts.test_gap SELECT generate_series(1, 30);
SELECT create_range_partitions('test_inserts.test_gap', 'val', 1, 10);
 create_range_partitions 
-------------------------
                       3
(1 row)

DROP TABLE gogudb_partition_table._test_inserts_2_test_gap; /* make a gap */
INSERT INTO test_inserts.test_gap VALUES(15); /* not ok */
ERROR:  cannot spawn a partition
DROP TABLE test_inserts.test_gap CASCADE;
NOTICE:  drop cascades to 3 other objects
/* test a few "special" ONLY queries used in pg_repack */
CREATE TABLE test_inserts.test_special_only(val INT NOT NULL);
INSERT INTO test_inserts.test_special_only SELECT generate_series(1, 30);
SELECT create_hash_partitions('test_inserts.test_special_only', 'val', 4);
 create_hash_partitions 
------------------------
                      4
(1 row)

/* create table as select only */
CREATE TABLE test_inserts.special_1 AS SELECT * FROM ONLY test_inserts.test_special_only;
SELECT count(*) FROM test_inserts.special_1;
 count 
-------
     0
(1 row)

DROP TABLE test_inserts.special_1;
/* insert into ... select only */
CREATE TABLE test_inserts.special_2 AS SELECT * FROM ONLY test_inserts.test_special_only WITH NO DATA;
INSERT INTO test_inserts.special_2 SELECT * FROM ONLY test_inserts.test_special_only;
SELECT count(*) FROM test_inserts.special_2;
 count 
-------
     0
(1 row)

DROP TABLE test_inserts.special_2;
DROP TABLE test_inserts.test_special_only CASCADE;
NOTICE:  drop cascades to 4 other objects
DROP SCHEMA test_inserts CASCADE;
NOTICE:  drop cascades to 19 other objects
DROP EXTENSION gogudb CASCADE;
