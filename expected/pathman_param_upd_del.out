\set VERBOSITY terse
SET search_path = 'public','_gogu';
CREATE EXTENSION gogudb;
CREATE SCHEMA param_upd_del;
CREATE TABLE param_upd_del.test(key INT4 NOT NULL, val INT4);
SELECT create_hash_partitions('param_upd_del.test', 'key', 10);
 create_hash_partitions 
------------------------
                     10
(1 row)

INSERT INTO param_upd_del.test SELECT i, i FROM generate_series(1, 1000) i;
ANALYZE;
PREPARE upd(INT4) AS UPDATE param_upd_del.test SET val = val + 1 WHERE key = $1;
EXPLAIN (COSTS OFF) EXECUTE upd(10);
               QUERY PLAN                
-----------------------------------------
 Update on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
               QUERY PLAN                
-----------------------------------------
 Update on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
               QUERY PLAN                
-----------------------------------------
 Update on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
               QUERY PLAN                
-----------------------------------------
 Update on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
               QUERY PLAN                
-----------------------------------------
 Update on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(10);
               QUERY PLAN                
-----------------------------------------
 Update on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE upd(11);
               QUERY PLAN                
-----------------------------------------
 Update on _param_upd_del_0_test
   ->  Seq Scan on _param_upd_del_0_test
         Filter: (key = 11)
(3 rows)

DEALLOCATE upd;
PREPARE del(INT4) AS DELETE FROM param_upd_del.test WHERE key = $1;
EXPLAIN (COSTS OFF) EXECUTE del(10);
               QUERY PLAN                
-----------------------------------------
 Delete on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
               QUERY PLAN                
-----------------------------------------
 Delete on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
               QUERY PLAN                
-----------------------------------------
 Delete on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
               QUERY PLAN                
-----------------------------------------
 Delete on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
               QUERY PLAN                
-----------------------------------------
 Delete on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(10);
               QUERY PLAN                
-----------------------------------------
 Delete on _param_upd_del_5_test
   ->  Seq Scan on _param_upd_del_5_test
         Filter: (key = 10)
(3 rows)

EXPLAIN (COSTS OFF) EXECUTE del(11);
               QUERY PLAN                
-----------------------------------------
 Delete on _param_upd_del_0_test
   ->  Seq Scan on _param_upd_del_0_test
         Filter: (key = 11)
(3 rows)

DEALLOCATE del;
DROP SCHEMA param_upd_del CASCADE;
NOTICE:  drop cascades to 11 other objects
DROP EXTENSION gogudb;
